#include <stdio.h>
#include <math.h>

// Check if the number is prime or not 
int isprime(long int num)
{ long int i;

    // Following Brute force division from 2 to sqrt(num) 
    // [https://www.cs.yale.edu/homes/aspnes/pinewiki/BruteForce.html]
	
    for(i=2;i<=sqrt(num);i++)
    {
	if(num%i == 0)
	    return 0;
    }
    return 1;
}

// Next prime number calculation 
long int FindNextPrime(long int n)
{
    long int prime;

    // Consider 0 and 1 as a special case
    if(n<2)
	return 2;

    // Manipulate number one after another to find next prime
    for(prime=n+1;;prime++)
    {
	if(isprime(prime))
	    return prime;
    }
}


int  main()
{
    long long int m, n;
    m= 1000000000;
    printf("n=%lld, Next_Prime1 = %lld\n",m,FindNextPrime(m));   
    n= 10000000000;
    printf("n=%lld, Next_Prime2 = %lld\n",n,FindNextPrime(n));
	
    // Product of two Prime Numbers 
    int x[100], y[100];
    int product[200]={0};
    int i,j,tmp;
    char prod1[101],prod2[101];
    printf("Enter 10-Digits Next Prime Number : ");
    scanf(" %s", prod1);
    printf("Enter 11-Digits Next Prime Number : ");
    scanf(" %s", prod2);
	
	// Length for each Next prime number 
    int l1 = strlen(prod1);
    int l2 = strlen(prod2);
	
    for(i = l1-1,j=0; i>=0; i--,j++)
    {
        x[j] = prod1[i]-'0';
    }
    for(i = l2-1,j=0; i>=0; i--,j++)
    {
        y[j] = prod2[i]-'0';
    }
    for(i = 0; i<l2; i++)
    {
        for(j = 0; j<l1; j++)
        {
            product[i+j] += y[i]*x[j];
        }
    }
    for(i = 0; i<l1+l2; i++)
    {
        tmp = product[i]/10;
        product[i] = product[i]%10;
        product[i+1] = product[i+1] + tmp;
    }
    for(i = l1+l2; i>= 0; i--)
    {
        if(product[i] > 0)
            break;
    }
	// Print the last 14-dight of the product
    printf("Last 14-digit of the Product : ");
    for(i = 14; i >= 0; i--)  
    {
        printf("%d",product[i]);
    }
	
    return 0;
}


